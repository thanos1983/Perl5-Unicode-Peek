.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Unicode::Peek 3"
.TH Unicode::Peek 3 "2017-09-23" "perl v5.24.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
.Vb 2
\&    Unicode::Peek \- Perl module supports different unicode(s) transformation
\&    formats to hex and vice versa.
.Ve
.SH "VERSION"
.IX Header "VERSION"
.Vb 1
\&    Version 0.01
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 5
\&    The Unicode::Peek \- Perl module provides to the user the ability to encode/
\&    decode asccii strings in a variety of unicode transformations to hex and vice
\&    versa. The user is able to take a peek in the hex data and see the formatted
\&    output and also vise versa. The user can provided an array of data in a hex
\&    format and convert it back to ascii. Perl version 5.13.2 or greater is required.
.Ve
.SH "SUBROUTINES/METHODS"
.IX Header "SUBROUTINES/METHODS"
.Vb 2
\&    use Unicode::Peek ( \*(Aqascii2hexEncode\*(Aq, \*(Aqhex2ascciiDecode\*(Aq,
\&                        \*(AqhexDumperOutput\*(Aq, \*(AqhexDumperInput\*(Aq );
\&
\&    my $hexEncoded         = ascii2hexEncode($unicodeFormat, $ascciiCharacters);
\&    ...
\&
\&    my $ascciiCharacters   = hex2ascciiDecode($unicodeFormat, $hexEncoded);
\&    ...
\&
\&    my @hexFormattedOutput = hexDumperOutput($unicodeFormat, $ascciiCharacters);
\&    ...
\&
\&    my $ascciiCharacters   = hexDumperInput($unicodeFormat, \e@hexFormattedOutput);
\&    ...
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 5
\&    This module exports four methods (ascii2hexEncode, hex2ascciiDecode, hexDumperOutput
\&    and hexDumperInput). All methods support 14 different encoding and decoding formats.
\&    The module has been tested with multiple languages with complex characters, but not
\&    with all known languages in the planet. So far as many languages have been tested all
\&    characters where encoded / decoded correctly.
.Ve
.SS "\s-1EXPORT\s0"
.IX Subsection "EXPORT"
.Vb 1
\&    None by default, but the module can also export all methods by simple declaring all:
\&
\&    use Unicode::Peek \*(Aq:all\*(Aq;
.Ve
.SH "SUPPORTED UNICODE FORMATS"
.IX Header "SUPPORTED UNICODE FORMATS"
.IP "\(bu" 4
\&\s-1UCS\-2\s0
.IP "\(bu" 4
\&\s-1UCS\-2BE\s0
.IP "\(bu" 4
\&\s-1UCS\-2LE\s0
.IP "\(bu" 4
\&\s-1UCS\-4\s0
.IP "\(bu" 4
\&\s-1UTF\-7\s0
.IP "\(bu" 4
utf8
.IP "\(bu" 4
utf8\-strict
.IP "\(bu" 4
\&\s-1UTF\-8\s0
.IP "\(bu" 4
\&\s-1UTF\-16\s0
.IP "\(bu" 4
\&\s-1UTF\-16BE\s0
.IP "\(bu" 4
\&\s-1UTF\-16LE\s0
.IP "\(bu" 4
\&\s-1UTF\-32\s0
.IP "\(bu" 4
\&\s-1UTF\-32BE\s0
.IP "\(bu" 4
\&\s-1UTF\-32LE\s0
.SH "EXAMPLE 1 (hexDumperOutput) =encoding utf8"
.IX Header "EXAMPLE 1 (hexDumperOutput) =encoding utf8"
.Vb 3
\&    This example is for femonstration purposes, randomly choosen Chinese as a testing
\&    language. We will use the L<Data::Dumper|https://perldoc.perl.org/Data/Dumper.html> module to print the formated hex output. Necessary is also the L<utf8|https://perldoc.perl.org/utf8.html>
\&    for the stdout (convert the internal representation of a Perl scalar to/from UTF\-8.)
\&
\&    #!/usr/bin/perl
\&    use utf8;
\&use strict;
\&use warnings;
\&use Data::Dumper;
.Ve
.PP
use Unicode::Peek qw( hexDumperOutput );
.PP
my \f(CW$lanquage\fR = 'Chinese';
.PP
my \f(CW$str\fR = '這是一個測試';
.PP
my \f(CW@flags\fR = ( '\s-1UCS\-2\s0',
    '\s-1UCS\-2BE\s0',
    '\s-1UCS\-2LE\s0',
    '\s-1UCS\-4\s0',
    '\s-1UTF\-7\s0',
    'utf8',
    '\s-1UTF\-8\s0',
    'utf\-8\-strict',
    '\s-1UTF\-16\s0',
    '\s-1UTF\-16BE\s0',
    '\s-1UTF\-16LE\s0',
    '\s-1UTF\-32\s0',
    '\s-1UTF\-32BE\s0',
    '\s-1UTF\-32LE\s0' );
.PP
while ( defined ( my \f(CW$flag\fR = shift \f(CW@flags\fR ) ) {
    print Dumper hexDumperOutput($flag, \f(CW$str\fR);
};
.SH "EXAMPLE 2 (hexDumperInput)"
.IX Header "EXAMPLE 2 (hexDumperInput)"
.Vb 6
\&    #!/usr/bin/perl
\&    use utf8;
\&use strict;
\&use warnings;
\&use Data::Dumper;
\&use feature \*(Aqsay\*(Aq;
.Ve
.PP
use Unicode::Peek qw( hexDumperOutput hexDumperInput );
.PP
my \f(CW$lanquage\fR = 'Chinese';
.PP
my \f(CW$str\fR = '這是一個測試';
.PP
my \f(CW@flags\fR = ( '\s-1UCS\-2\s0',
    '\s-1UCS\-2BE\s0',
    '\s-1UCS\-2LE\s0',
    '\s-1UCS\-4\s0',
    '\s-1UTF\-7\s0',
    'utf8',
    '\s-1UTF\-8\s0',
    'utf\-8\-strict',
    '\s-1UTF\-16\s0',
    '\s-1UTF\-16BE\s0',
    '\s-1UTF\-16LE\s0',
    '\s-1UTF\-32\s0',
    '\s-1UTF\-32BE\s0',
    '\s-1UTF\-32LE\s0' );
.PP
while ( defined ( my \f(CW$flag\fR = shift \f(CW@flags\fR ) ) {
    my \f(CW$hexDumper\fR = hexDumperOutput($flag, \f(CW$str\fR);
print Dumper \f(CW$hexDumper\fR;
say hexDumperInput($flag, \f(CW$hexDumper\fR);
};
.SH "EXAMPLE 3 (hex2ascciiDecode ascii2hexEncode)"
.IX Header "EXAMPLE 3 (hex2ascciiDecode ascii2hexEncode)"
.Vb 5
\&    #!/usr/bin/perl
\&    use utf8;
\&use strict;
\&use warnings;
\&use feature \*(Aqsay\*(Aq;
.Ve
.PP
use Unicode::Peek qw( hex2ascciiDecode ascii2hexEncode );
.PP
my \f(CW$lanquage\fR = 'Chinese';
.PP
my \f(CW$str\fR = '這是一個測試';
.PP
my \f(CW@flags\fR = ( '\s-1UCS\-2\s0',
    '\s-1UCS\-2BE\s0',
    '\s-1UCS\-2LE\s0',
    '\s-1UCS\-4\s0',
    '\s-1UTF\-7\s0',
    'utf8',
    '\s-1UTF\-8\s0',
    'utf\-8\-strict',
    '\s-1UTF\-16\s0',
    '\s-1UTF\-16BE\s0',
    '\s-1UTF\-16LE\s0',
    '\s-1UTF\-32\s0',
    '\s-1UTF\-32BE\s0',
    '\s-1UTF\-32LE\s0' );
.PP
while ( defined ( my \f(CW$flag\fR = shift \f(CW@flags\fR ) ) {
    my \f(CW$hexEncoded\fR = ascii2hexEncode($flag, \f(CW$str\fR);
say hex2ascciiDecode($flag, \f(CW$hexEncoded\fR);
};
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
.Vb 2
\&    The module is implemented by using \*(Aqutf8\*(Aq and \*(AqEncode\*(Aq, both modules are
\&    mandatory as prerequisites and required to be pre\-installed.
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
.SH "BUGS"
.IX Header "BUGS"
.Vb 3
\&    Please report any bugs or feature requests to C<bug\-unicode\-peek at rt.cpan.org>, or through
\&    the web interface at L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Unicode\-Peek>.  I will be notified, and then you\*(Aqll
\&    automatically be notified of progress on your bug as I make changes.
.Ve
.SH "SUPPORT"
.IX Header "SUPPORT"
.Vb 1
\&    You can find documentation for the module with the perldoc command.
\&
\&    perldoc Unicode::Peek
.Ve
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker (report bugs here)
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.IP "\(bu" 4
Search \s-1CPAN\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.SH "REPOSITORY"
.IX Header "REPOSITORY"
.Vb 2
\&    This library is free software; you can redistribute it and/or modify it under
\&    the same terms as Perl itself.
.Ve
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
.Vb 1
\&    Copyright (C) 2017 by Athanasios Garyfalos.
\&
\&    This library is free software; you can redistribute it and/or modify it
\&    under the terms of the the Artistic License (2.0). You may obtain a
\&    copy of the full license at:
.Ve
.PP
.Vb 4
\&    Any use, modification, and distribution of the Standard or Modified
\&    Versions is governed by this Artistic License. By using, modifying or
\&    distributing the Package, you accept this license. Do not use, modify,
\&    or distribute the Package, if you do not accept this license.
\&
\&    If your Modified Version has been derived from a Modified Version made
\&    by someone other than you, you are nevertheless required to ensure that
\&    your Modified Version complies with the requirements of this license.
\&
\&    This license does not grant you the right to use any trademark, service
\&    mark, tradename, or logo of the Copyright Holder.
\&
\&    This license includes the non\-exclusive, worldwide, free\-of\-charge
\&    patent license to make, have made, use, offer to sell, sell, import and
\&    otherwise transfer the Package with respect to any patent claims
\&    licensable by the Copyright Holder that are necessarily infringed by the
\&    Package. If you institute patent litigation (including a cross\-claim or
\&    counterclaim) against any party alleging that the Package constitutes
\&    direct or contributory patent infringement, then this Artistic License
\&    to you shall terminate on the date that such litigation is filed.
\&
\&    Disclaimer of Warranty: THE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER
\&    AND CONTRIBUTORS "AS IS\*(Aq AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
\&    THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
\&    PURPOSE, OR NON\-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY
\&    YOUR LOCAL LAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR
\&    CONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR
\&    CONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE,
\&    EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.Ve
.SH "CHANGE LOG"
.IX Header "CHANGE LOG"
.Vb 2
\&    $Log: Peek.pm,v $
\&    Revision 0.01  2017/09/21 17:22:21 (UCT) Thanos
.Ve
